/*
 * AccessHub API documentation
 *
 * Agile.Now.AccessHub is a secure REST API designed to manage accounts, access groups, user groups, organizations, locations, applications, roles, and webhooks. This API provides a robust and scalable solution for managing user access and organizational structures in a multi-tenant environment.    **Key Features:**    1. **Accounts Management:**     - Manage user accounts with secure authentication and authorization.    2. **Access Groups:**     - Define and manage access groups for access control.     - Assign users to access groups based on roles and permissions.    3. **User Groups:**     - Create and manage user groups for better organization and collaboration.    4. **Organizations & Locations:**     - Manage multiple organizations and locations within a single platform.     - Attribute-based access control (ABAC) for settings.    5. **Applications:**     - Centralized management of applications within the platform.     - Assign and monitor application usage and access.    6. **Roles:**     - Define and manage roles for different access levels.     - Role-based access control to ensure appropriate permissions.    7. **Webhooks:**     - Integration with external services and applications.     - Configure and manage webhooks for real-time notifications and data syncing.    **Benefits:**    - **Enhanced Security:** Attribute-based and role-based access controls ensure data protection and authorized access.  - **Scalability:** Designed for growing organizations.  - **Efficiency:** Streamlined management of accounts, groups, and roles reduces overhead.  - **Flexibility:** Multi-tenant architecture allows easy customization.  - **Integration:** Webhook support facilitates seamless integration with external systems.    **Conclusion:**    Agile.Now.AccessHub is a powerful platform for managing your business data. It offers a centralized, secure, and scalable solution, enhancing operational efficiency, security, and flexibility in managing multi-tenant environments.
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: dev@agilenow.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using AccessHub.Model;
using AccessHub.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace AccessHub.Test.Model
{
    /// <summary>
    ///  Class for testing ConfigData
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ConfigDataTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ConfigData
        //private ConfigData instance;

        public ConfigDataTests()
        {
            // TODO uncomment below to create an instance of ConfigData
            //instance = new ConfigData();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ConfigData
        /// </summary>
        [Fact]
        public void ConfigDataInstanceTest()
        {
            // TODO uncomment below to test "IsType" ConfigData
            //Assert.IsType<ConfigData>(instance);
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'WebhookEntityId'
        /// </summary>
        [Fact]
        public void WebhookEntityIdTest()
        {
            // TODO unit test for the property 'WebhookEntityId'
        }

        /// <summary>
        /// Test the property 'HasCreateAccess'
        /// </summary>
        [Fact]
        public void HasCreateAccessTest()
        {
            // TODO unit test for the property 'HasCreateAccess'
        }

        /// <summary>
        /// Test the property 'HasUpdateAccess'
        /// </summary>
        [Fact]
        public void HasUpdateAccessTest()
        {
            // TODO unit test for the property 'HasUpdateAccess'
        }

        /// <summary>
        /// Test the property 'HasDeleteAccess'
        /// </summary>
        [Fact]
        public void HasDeleteAccessTest()
        {
            // TODO unit test for the property 'HasDeleteAccess'
        }

        /// <summary>
        /// Test the property 'IsActive'
        /// </summary>
        [Fact]
        public void IsActiveTest()
        {
            // TODO unit test for the property 'IsActive'
        }

        /// <summary>
        /// Test the property 'ModifiedBy'
        /// </summary>
        [Fact]
        public void ModifiedByTest()
        {
            // TODO unit test for the property 'ModifiedBy'
        }

        /// <summary>
        /// Test the property 'ModifiedOn'
        /// </summary>
        [Fact]
        public void ModifiedOnTest()
        {
            // TODO unit test for the property 'ModifiedOn'
        }

        /// <summary>
        /// Test the property 'CreatedBy'
        /// </summary>
        [Fact]
        public void CreatedByTest()
        {
            // TODO unit test for the property 'CreatedBy'
        }

        /// <summary>
        /// Test the property 'CreatedOn'
        /// </summary>
        [Fact]
        public void CreatedOnTest()
        {
            // TODO unit test for the property 'CreatedOn'
        }
    }
}
