/*
 * Accounts API documentation
 *
 * ## Introduction  The OpenAPI Specification (OAS) defines a standard, language-agnostic interface to RESTful APIs which allows both humans and computers to discover and understand the capabilities of the service without access to source code, documentation, or through network traffic inspection. When properly defined, a consumer can understand and interact with the remote service with a minimal amount of implementation logic.    An OpenAPI definition can then be used by documentation generation tools to display the API, code generation tools to generate servers and clients in various programming languages, testing tools, and many other use cases.    | Version | URL | Description |  | - -- | - -- | - -- |  | v3 | https://dev.esystems.fi/Endpoint/rest/Doc/v3/Json/Accounts | Serializes to the Open API document as a string in the JSON format and represents all patches of OpenAPI V3.0 spec (e.g. 3.0.0, 3.0.1). |  | v3 | https://dev.esystems.fi/Endpoint/rest/Doc/v3/Yaml/Accounts | Serializes to the Open API document as a string in the Yaml format and represents all patches of OpenAPI V3.0 spec (e.g. 3.0.0, 3.0.1). |  | v2 | https://dev.esystems.fi/Endpoint/rest/Doc/v2/Json/Accounts | Serializes to the Open API document as a string in the JSON format and represents OpenAPI V2.0 spec.|  | v2 | https://dev.esystems.fi/Endpoint/rest/Doc/v2/Yaml/Accounts | Serializes to the Open API document as a string in the Yaml format and represents OpenAPI V2.0 spec. |
 *
 * The version of the OpenAPI document: 3.0.2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Agile.Now.AccessHub.Model;
using Agile.Now.AccessHub.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Agile.Now.AccessHub.Test.Model
{
    /// <summary>
    ///  Class for testing Config
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ConfigTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Config
        //private Config instance;

        public ConfigTests()
        {
            // TODO uncomment below to create an instance of Config
            //instance = new Config();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Config
        /// </summary>
        [Fact]
        public void ConfigInstanceTest()
        {
            // TODO uncomment below to test "IsType" Config
            //Assert.IsType<Config>(instance);
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'WebhookEntityId'
        /// </summary>
        [Fact]
        public void WebhookEntityIdTest()
        {
            // TODO unit test for the property 'WebhookEntityId'
        }

        /// <summary>
        /// Test the property 'HasCreateAccess'
        /// </summary>
        [Fact]
        public void HasCreateAccessTest()
        {
            // TODO unit test for the property 'HasCreateAccess'
        }

        /// <summary>
        /// Test the property 'HasUpdateAccess'
        /// </summary>
        [Fact]
        public void HasUpdateAccessTest()
        {
            // TODO unit test for the property 'HasUpdateAccess'
        }

        /// <summary>
        /// Test the property 'HasDeleteAccess'
        /// </summary>
        [Fact]
        public void HasDeleteAccessTest()
        {
            // TODO unit test for the property 'HasDeleteAccess'
        }

        /// <summary>
        /// Test the property 'IsActive'
        /// </summary>
        [Fact]
        public void IsActiveTest()
        {
            // TODO unit test for the property 'IsActive'
        }

        /// <summary>
        /// Test the property 'ModifiedBy'
        /// </summary>
        [Fact]
        public void ModifiedByTest()
        {
            // TODO unit test for the property 'ModifiedBy'
        }

        /// <summary>
        /// Test the property 'ModifiedOn'
        /// </summary>
        [Fact]
        public void ModifiedOnTest()
        {
            // TODO unit test for the property 'ModifiedOn'
        }

        /// <summary>
        /// Test the property 'CreatedBy'
        /// </summary>
        [Fact]
        public void CreatedByTest()
        {
            // TODO unit test for the property 'CreatedBy'
        }

        /// <summary>
        /// Test the property 'CreatedOn'
        /// </summary>
        [Fact]
        public void CreatedOnTest()
        {
            // TODO unit test for the property 'CreatedOn'
        }
    }
}
