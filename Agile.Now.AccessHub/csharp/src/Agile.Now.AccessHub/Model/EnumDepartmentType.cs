/*
 * Agile.Now.AccessHub API documentation
 *
 * Agile.Now.AccessHub is a secure REST API designed to manage accounts, access groups, user groups, organizations, locations, applications, roles, and webhooks. This API provides a robust and scalable solution for managing user access and organizational structures in a multi-tenant environment.    **Key Features:**    1. **Accounts Management:**     - Manage user accounts with secure authentication and authorization.    2. **Access Groups:**     - Define and manage access groups for access control.     - Assign users to access groups based on roles and permissions.    3. **User Groups:**     - Create and manage user groups for better organization and collaboration.    4. **Organizations & Locations:**     - Manage multiple organizations and locations within a single platform.     - Attribute-based access control (ABAC) for settings.    5. **Applications:**     - Centralized management of applications within the platform.     - Assign and monitor application usage and access.    6. **Roles:**     - Define and manage roles for different access levels.     - Role-based access control to ensure appropriate permissions.    7. **Webhooks:**     - Integration with external services and applications.     - Configure and manage webhooks for real-time notifications and data syncing.    **Benefits:**    - **Enhanced Security:** Attribute-based and role-based access controls ensure data protection and authorized access.  - **Scalability:** Designed for growing organizations.  - **Efficiency:** Streamlined management of accounts, groups, and roles reduces overhead.  - **Flexibility:** Multi-tenant architecture allows easy customization.  - **Integration:** Webhook support facilitates seamless integration with external systems.    **Conclusion:**    Agile.Now.AccessHub is a powerful platform for managing your business data. It offers a centralized, secure, and scalable solution, enhancing operational efficiency, security, and flexibility in managing multi-tenant environments.
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: dev@agilenow.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Agile.Now.AccessHub.Client.OpenAPIDateConverter;

namespace Agile.Now.AccessHub.Model
{
    /// <summary>
    /// The enum of DepartmentType.
    /// </summary>
    /// <value>The enum of DepartmentType.</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum EnumDepartmentType
    {
        /// <summary>
        /// Enum External for value: External
        /// </summary>
        [EnumMember(Value = "External")]
        External = 1,

        /// <summary>
        /// Enum Internal for value: Internal
        /// </summary>
        [EnumMember(Value = "Internal")]
        Internal = 2
    }

    /// <summary>
    /// Converts <see cref="EnumDepartmentType"/> to and from the JSON value
    /// </summary>
    public static class EnumDepartmentTypeValueConverter
    {
        /// <summary>
        /// Parses a given value to <see cref="EnumDepartmentType"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        public static EnumDepartmentType FromString(string value)
        {
            return FromStringOrDefault(value) ?? throw new NotImplementedException($"Could not convert value to type EnumDepartmentType: '{value}'");
        }

        /// <summary>
        /// Parses a given value to <see cref="EnumDepartmentType"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        public static EnumDepartmentType? FromStringOrDefault(string value)
        {
            if (value.Equals("External"))
                return EnumDepartmentType.External;

            if (value.Equals("Internal"))
                return EnumDepartmentType.Internal;

            return null;
        }
    }

}
